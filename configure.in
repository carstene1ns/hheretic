dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.53)
AC_INIT([hheretic], [0.2.1])
AC_REVISION($Revision$)
AC_CONFIG_AUX_DIR([autotools])
AC_CONFIG_SRCDIR(base/am_map.c)
AC_CONFIG_HEADER(include/config.h)

dnl ==================================================================
dnl Default values
dnl ==================================================================

GLHEXEN="true"
SVGAHEXEN="false"
no_svga="yes"

THREAD_LIBS=""
GLLIBS=""
SVGALIBS=""

dnl ==================================================================
dnl Command-line args. Check for mutually-exclusive options.
dnl ==================================================================

AC_ARG_ENABLE(fullscreen,
AC_HELP_STRING([--enable-fullscreen], [Run fullscreen by default [[default=no]]]),
							[], [enable_fullscreen=no])
if test x$enable_fullscreen = xyes; then
	AC_DEFINE(FULLSCREEN_DEFAULT, 1, [Define if want to run fullscreen by default instead of windowed])
fi

AC_ARG_ENABLE(userdirs,
AC_HELP_STRING([--disable-userdirs], [Disable user directories [[default=no]]]),
							[], [enable_userdirs=yes])

if test x$enable_userdirs != xyes; then
	AC_DEFINE(_NO_USERDIRS, 1, [Define if want to disable user directories])
fi

AC_ARG_ENABLE(asm,
AC_HELP_STRING([--disable-asm], [Disable assembly language [[default=no]]]),
							[], [enable_asm=yes])
if test x$enable_asm != xyes; then
	AC_DEFINE(_DISABLE_ASM, 1, [Define if not want to use assembly language])
fi

AC_ARG_ENABLE(svga,
AC_HELP_STRING([--enable-svga], [Enable SVGALib version [[default=no]]]),
						[], [enable_svga=no])
if test x$enable_svga = xyes; then
	no_svga="no"
	SVGAHEXEN="true"
fi

AC_ARG_ENABLE(gl,
AC_HELP_STRING([--disable-gl], [Disable OpenGL version [[default=no]]]),
						[], [enable_gl=$no_svga])
if test x$enable_gl = xyes; then
	if test x$no_svga = xno; then
	    AC_MSG_ERROR([*** --enable-gl and --enable-svga can not be used together])
	fi
	AC_DEFINE(RENDER3D, 1, [Define if building with OpenGL support])
else
	GLHEXEN="false"
fi

AC_SUBST(GLHEXEN)
AC_SUBST(SVGAHEXEN)

AC_ARG_ENABLE(rangecheck,
AC_HELP_STRING([--enable-rangecheck], [Enable parameter validation debugging code [[default=no]]]),
						[], [enable_rangecheck=no])
if test x$enable_rangecheck = xno; then
	AC_DEFINE(NORANGECHECKING, 1, [Define to not compile most parameter validation debugging code])
fi

AC_ARG_WITH(datapath,
[  --with-datapath=<DIR>   Use DIR for shared game data. Not defined by default.],
datapath="$withval", datapath="")
AC_DEFINE_UNQUOTED(SHARED_DATAPATH, "$datapath", [Define this to the shared game directory root])
SHARED_DATAPATH="$datapath"
AC_SUBST(SHARED_DATAPATH)

if test "$SVGAHEXEN" = "true";then
  default_audio="oss"
else
  default_audio="sdl"
fi

AC_ARG_WITH(audio,
[  --with-audio=<driver>   If set, will change the audio driver. Valid values
                          are oss, sdl and sdlmixer.  sdl is the default.
                          sdlmixer adds the ability of midi music playback.],
audio_drv="$withval", audio_drv="$default_audio")

if test "$SVGAHEXEN" = "true";then
	if test "$audio_drv" != "$default_audio";then
		AC_MSG_WARN([Ignoring --with-audio option for svgahexen])
	fi
	SND_MODULE="$default_audio"
else
  case "$audio_drv" in
	oss|sdl|sdlmixer)
		SND_MODULE="$audio_drv"
		;;
	*)
		AC_MSG_ERROR([*** invalid value for --with-audio])
		;;
  esac
fi

AC_SUBST(SND_MODULE)


dnl ==================================================================
dnl Checks for programs.
dnl ==================================================================

AC_PROG_CC
AC_PROG_CPP


dnl ==================================================================
dnl Checks for header files.
dnl ==================================================================

AC_CHECK_HEADERS(\
	dlfcn.h \
	linux/cdrom.h \
	sys/cdio.h \
	sys/soundcard.h \
	linux/soundcard.h \
	machine/soundcard.h \
	soundcard.h \
	stdint.h \
	inttypes.h \
	strings.h
)
AC_HEADER_STAT()


dnl ==================================================================
dnl Checks for typedefs, structures, and compiler characteristics
dnl ==================================================================

AC_C_CONST()
AC_C_INLINE()
AC_C_CHAR_UNSIGNED()
AC_TYPE_SIZE_T()

AC_CHECK_SIZEOF(char,0)
AC_CHECK_SIZEOF(short,0)
AC_CHECK_SIZEOF(int,0)
AC_CHECK_SIZEOF(long,0)
AC_CHECK_SIZEOF(long long,0)
AC_CHECK_SIZEOF(size_t,0)
AC_CHECK_SIZEOF(void *,0)
AC_CHECK_SIZEOF(float,0)
AC_CHECK_SIZEOF(double,0)
AC_CHECK_SIZEOF(long double,0)

AC_FUNC_ALLOCA
AC_FUNC_MEMCMP

AC_C_BIGENDIAN

dnl === Check for underscore on external symbols =====================
AC_MSG_CHECKING(whether external symbols need an underscore prefix)
AC_TRY_LINK(
	[asm(".long _bar");
	int bar;],
	[],
	AC_DEFINE(HAVE_SYM_PREFIX_UNDERSCORE, 1, [Define this if C symbols are prefixed with an underscore]) AC_MSG_RESULT(yes),
	AC_MSG_RESULT(no)
)

dnl === Check if the GCC __builtin_expect keyword is available =======
AH_VERBATIM([HAVE___BUILTIN_EXPECT],
[/* Define this if the GCC __builtin_expect keyword is available */
#undef HAVE___BUILTIN_EXPECT
#ifndef HAVE___BUILTIN_EXPECT
# define __builtin_expect(x,c) x
#endif])
AC_MSG_CHECKING(for __builtin_expect)
AC_TRY_COMPILE(
	[long (*foo) (long, long) = __builtin_expect;],
	[],
	AC_DEFINE(HAVE___BUILTIN_EXPECT) AC_MSG_RESULT(yes),
	AC_MSG_RESULT(no)
)

dnl === Check for gcc strength-reduce bug ============================
if test "x${GCC}" = "xyes"; then
  CFLAGS="$CFLAGS -Wall"
  AC_CACHE_CHECK( [for gcc strength-reduce bug], ac_cv_c_gcc_strength_bug,
                  AC_TRY_RUN([
int main(void) {
  static int Array[[3]];
  unsigned int B = 3;
  int i;
  for(i=0; i<B; i++) Array[[i]] = i - 3;
  exit( Array[[1]] != -2 );
}],
    ac_cv_c_gcc_strength_bug="no",
    ac_cv_c_gcc_strength_bug="yes",
    ac_cv_c_gcc_strength_bug="yes") )
  if test "$ac_cv_c_gcc_strength_bug" = "yes"; then
    CFLAGS="$CFLAGS -fno-strength-reduce"
  fi
fi


dnl ==================================================================
dnl Checks for library functions.
dnl ==================================================================

AC_PATH_X
X11_INC="$ac_x_includes"
X11_LIB="$ac_x_libraries"

AC_CHECK_LIB(m, pow,, AC_MSG_ERROR([*** math library (-lm) appears broken]))

AH_VERBATIM([_REENTRANT],
[/* For pthread support in OSS audio code. */
#ifndef _REENTRANT
# undef _REENTRANT
#endif])

AH_VERBATIM([_THREAD_SAFE],
[/* For pthread support in OSS audio code. */
#ifndef _THREAD_SAFE
# undef _THREAD_SAFE
#endif])

dnl == pthreads check: This is linux-centric (see the configure.in of SDL
dnl == for other systems' pthreads support), but we need this for linux only
AC_CHECK_LIB(pthread, pthread_join,
	[HAVE_PTHREADS="yes";THREAD_LIBS="-lpthread";], [HAVE_PTHREADS="no";])
if test "$SND_MODULE" = "oss";then
	if test "$HAVE_PTHREADS" = "no"; then
	   AC_MSG_ERROR([*** libpthread not found! (required by sound code.)])
	fi
	AC_DEFINE(_REENTRANT)
	AC_DEFINE(_THREAD_SAFE)
fi

AC_SUBST(THREAD_LIBS)
AC_SUBST(X11_INC)
AC_SUBST(X11_LIB)

dnl === Check for SDL ================================================
SDL_VERSION="1.2.4"
AM_PATH_SDL($SDL_VERSION,
	[HAVESDL="yes"],
	[HAVESDL="no"]
)

if test "$SVGAHEXEN" = "false";then
  if test "$HAVESDL" = "no"; then
	AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
  fi
fi

saved_libs="$LIBS"
AC_CHECK_LIB(SDL_mixer, Mix_LoadMUS, [HAVE_SDLMIXER="yes"], [HAVE_SDLMIXER="no"])

LIBS="$saved_libs"
if test "$SND_MODULE" = "sdlmixer";then
  if test $HAVE_SDLMIXER = "no";then
	AC_MSG_ERROR([*** SDL_mixer not found!])
  else
	SDL_LIBS="$SDL_LIBS -lSDL_mixer"
  fi
fi

AC_SUBST(SDL_CFLAGS)
AC_SUBST(SDL_LIBS)

dnl === Check for GL libraries =======================================
saved_libs="$LIBS"
if test x$ac_x_libraries != x; then
   LIBS="$LIBS -L$ac_x_libraries "
fi
AC_CHECK_LIB(GL, glBindTexture, [GLLIBS="$GLLIBS -lGL";HAVEGL="yes";], [HAVEGL="no";])
if test "$HAVEGL" = "yes"; then
   LIBS="$LIBS $GLLIBS"
   AC_CHECK_LIB(GLU, gluBuild2DMipmaps, [GLLIBS="$GLLIBS -lGLU";HAVEGLU="yes";], [HAVEGLU="no";])
fi
LIBS="$saved_libs"

if test "$GLHEXEN" = "true"; then
  if test "$HAVEGL" = "no"; then
	AC_MSG_ERROR([*** GL library not found!])
  fi
  if test "$HAVEGLU" = "no"; then
	AC_MSG_ERROR([*** GLU library not found!])
  fi
fi

AC_SUBST(GLLIBS)

dnl === Check for SVGALib ============================================
AC_CHECK_LIB(vga, vga_setmode, [SVGALIBS="-lvga"; HAVESVGA="yes"], [HAVESVGA="no"])

if test "$SVGAHEXEN" = "true";then
  if test "$HAVESVGA" = "no"; then
	AC_MSG_ERROR([*** SVGALib not found!])
  fi
fi

AC_SUBST(SVGALIBS)


dnl ==================================================================
dnl Generate output files
dnl ==================================================================

AC_OUTPUT(Makefile)


dnl ==================================================================
dnl Make a short report :
dnl ==================================================================
echo
echo "HHeretic configuration finished."

if test "$SVGAHEXEN" = "true"; then
    report="Software (SVGALib)"
else
  if test "$GLHEXEN" = "true"; then
    report="OpenGL (SDL)"
  else
    report="Software (SDL)"
  fi
fi
echo "Enabled target       : $report"

echo "Audio driver         : $SND_MODULE"

if test x$enable_rangecheck = xno; then
    report="disabled"
else
    report="enabled"
fi
echo "Range checks (debug) : $report"

if test x$datapath = x; then
    report="(not set)"
else
    report="$datapath"
fi
echo "Shared game data path: $report"

if test "$SVGAHEXEN" = "true"; then
    report="N/A"
else
  if test x$enable_fullscreen = xyes; then
    report="fullscreen"
  else
    report="windowed"
  fi
fi
echo "Default window mode  : $report"
echo

echo "Type 'make' to compile."
echo

